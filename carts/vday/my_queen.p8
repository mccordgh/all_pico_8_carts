pico-8 cartridge // http://www.pico-8.com
version 16
__lua__

gravity = 0.5
xMove = 0
yMove = 0
cam_x = 0
enemy_x = 0
star_x = 150


player = {
    x = 32,
    y = 96-8,
    w = 8,
    h = 8,
    speed = 3,
    jump_speed = 4,
    jumping = false,
    grounded = true,
}

ground = {
    x = 0,
    y = 96,
    w = 128,
    h = 128,
}

function _init()
    enemies = {}

    add(enemies, make_enemy())
    add(enemies, make_enemy())
    add(enemies, make_enemy())
    add(enemies, make_enemy())
    add(enemies, make_enemy())
    add(enemies, make_enemy())
    add(enemies, make_enemy())

    stars = {}

    add(stars, make_star())
    add(stars, make_star())
    add(stars, make_star())
    add(stars, make_star())
    add(stars, make_star())
    add(stars, make_star())
    add(stars, make_star())
end

function make_enemy()
    enemy_x = enemy_x + 300

    local enemy = {
        x = enemy_x,
        y = player.y,
        w = 8,
        h = 8,
        speed = 1,
    }

    return enemy
end

function make_star()
    star_x = star_x + 300

    local star = {
        x = star_x,
        y = player.y - 12,
        w = 8,
        h = 8,
        speed = 1,
    }

    return star
end

function update_enemies()
    for enemy in all(enemies) do
        enemy.x = enemy.x - enemy.speed
    end
end

function update_stars()
    for star in all(stars) do
        star.x = star.x - star.speed
    end
end

function _update()
    update_stars()
    update_enemies()

    get_input()

    local collide_x = did_collide_x()
    local collide_y = did_collide_y()

    if collide_x == false then
        player.x = player.x + xMove
    end

    if collide_y == false then
        if (player.grounded == false) then
            yMove = yMove + gravity

            player.y = player.y + yMove
        end
    elseif collide_y == true then
        yMove = 0

        player.grounded = true
        player.jumping = false
        player.y = (ground.y - player.h)
    end

    xMove = 0
    -- if yMove < 0 then
    --     yMove = 0
    -- end
    update_camera()
end

function update_camera()
    cam_x = player.x - 32

    if cam_x < 0 then
        cam_x = 0
    end

    camera(cam_x, 0)
end

function get_input()
    if btn(0) then
        xMove = -player.speed
    end

    if btn(1) then
        xMove = player.speed
    end

    if btnp(2) and (player.jumping == false) then
        yMove = -player.jump_speed

        player.jumping = true
        player.grounded = false
    end
end

function did_collide_x()
    local collide_x = false

    if player.x + xMove < 8 or player.x + xMove > 1960 then
        collide_x = true
    end

    for enemy in all(enemies) do
        if did_collide_enemy(enemy) then
            collide_x = true
        end
    end

    for star in all(stars) do
        if did_collide_enemy(star) then
            collide_x = true
        end
    end

    return collide_x
end

function did_collide_enemy(enemy)
    if (player.x < enemy.x + enemy.w) and (player.x + player.w > enemy.x) and (player.y < enemy.y + enemy.h) and (player.y + player.h > enemy.y) then
        return true
    end

    return false
end

function did_collide_y()
    local collide_y = false

    if player.grounded == false then
        if (player.y + player.h + yMove) >= ground.y then
            collide_y = true
        end
    end

    return collide_y
end

function debug_info()
    print("yMove: " .. yMove, cam_x, 0)
    print("grounded: " .. (player.grounded and "true" or "false"), cam_x, 10)
    print("jumping: " .. (player.jumping and "true" or "false"), cam_x, 20)
    print("x: " .. player.x .. ", y: " .. player.y, cam_x, 30)
    print("cam_x: " .. cam_x .. " / " .. (cam_x / 16), cam_x, 40)
end

function _draw()
    cls(0)

    debug_info()

    draw_scene()
    draw_player()
    draw_enemies()
    draw_stars()
end

function draw_stars()
    for star in all(stars) do
        spr(9, star.x, star.y)
    end
end

function draw_enemies()
    for enemy in all(enemies) do
        spr(7, enemy.x, enemy.y)
    end
end

function draw_player()
    spr(1, player.x, player.y)
end

function draw_scene()
    -- rectfill(0, 0, 128, 128, 14)
    local cell_size = 16

    map(cam_x / cell_size, 0, cam_x, 0, cell_size, cell_size)
end

__gfx__
00000000000909000000000000666660000000000004400000004400499999940000000000005000050606060800080000080000077777770000000000000000
000000000003980000090900065766570066666000444000000444000499bbbb4999999400055600005566608880888000880000056666670000000000000000
007007000aafaaa00003980006656065065766570444400004444400999bbb8b0499bbbb00506060055506668888878000788000055555550000000000000000
00077000aaff4f400aafaaa000655655066560650fcfc0000fcfc000bb3bbbb3999bbb8b05550666005000608888878000888000000000000000000000000000
000770000a3ffff0aaff4f4066677770006556550ffff0000ffff000bb34bbbbbb3bbbb300505060055506660888880000888000777707770000000000000000
00700700aaee88900a3ffff0606777756667777002f2240002222000bbb33403bb34bbbb00055600005556600088800000888000666705660000000000000000
00000000ae877d60aaee889000600050606777750222200002f224004bb04433bbb3340300005000050505060088800000088000555505550000000000000000
0000000008888880ae877d6000600050006000500f0040000f004000bb0003304bb0443300000000000000000008000000080000000000000000000000000000
__map__
0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d
0d0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000d
0d0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000d
0d0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000d
0d0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000d
0d0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000d
0d0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000d
0d0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000d
0d0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000d
0d0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000d
0d0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000d
0d0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000d
0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d
0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d
0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d
0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d0d
